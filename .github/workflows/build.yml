name: Docker Image
on: push

env:
  REPO: codello/lilypond

jobs:
  build:
    name: Build ${{ matrix.lilypond.version || matrix.lilypond }}-${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lilypond:
          - "2.19.60"
          - "2.19.61"
          - "2.19.62"
          - "2.19.63"
          - "2.19.64"
          - "2.19.65"
          - "2.19.80"
          - "2.19.81"
          - "2.19.82"
          - "2.19.83"
          - "2.19.84"
          - "2.20.0"
          - "2.21.0"
        target: [ "base", "fonts" ]
        include:
          - lilypond: "2.19.84"
            tags: [ "2.19" ]
          - lilypond: "2.20.0"
            tags: [ "2.20", latest ]
          - lilypond: "2.21.0"
            tags: [ "2.21", "dev" ]
    env:
      VERSION: ${{ matrix.lilypond }}
      # run: echo ::set-env name=IMAGE::"${{ matrix.lilypond }}"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build Image
        run: |
          docker build --target ${{ matrix.target }} --build-arg VERSION="${{ matrix.lilypond }}" --tag "$REPO:$VERSION" .
      - name: Test Image
        run: |
          docker run -v $(pwd):/ly "$REPO:$VERSION" test.ly
          test -f test.pdf
      - name: Add Additional Tags
        if: matrix.tags
        run: |
          for TAG in ${{ join(matrix.tags, ' ') }}; do
            docker tag "$REPO:$VERSION" "$REPO:$TAG"
          done
      - name: Rename Tags
        if: matrix.target != 'base'
        run: |
          TAGS=$(docker image inspect -f '{{ range $index, $tag := .RepoTags }}{{if $index}} {{end}}{{$tag}}{{end}}' "$REPO:$VERSION")
          for TAG in $TAGS; do
            if [[ "$TAG" = "$REPO:latest" ]]; then
              NEW_TAG="$REPO:${{ matrix.target }}"
            else
              NEW_TAG="$TAG-${{ matrix.target }}"
            fi
            docker tag "$TAG" "$NEW_TAG"
            docker rmi "$TAG"
          done
      - name: Push Image
        if: github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push "$REPO"
